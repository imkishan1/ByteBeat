<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- locals.title  %></title>
    <link rel="stylesheet" href="/css/style.css">
    <script type="text/javascript" defer src="/js/script.js"></script>
    <style>
        /* Adjust the height of CKEditor */
        .ck-editor__editable {
            min-height: 200px;
        }
    </style>
</head>
<body>
    <%- include('../partials/header.ejs') %>

        <%- include('../partials/search.ejs') %>
       <main class="main">
           <%- body %>
       </main>
       <%- include('../partials/footer.ejs') %>
</body>

<!-- <script>
    const card = document.querySelector(".featured-post-card-base");
    const motionMatchMedia = window.matchMedia("(prefers-reduced-motion)");
    const THRESHOLD = 10;
    
    /*
     * Read the blog post here:
     * https://letsbuildui.dev/articles/a-3d-hover-effect-using-css-transforms
     */
    function handleHover(e) {
      const { clientX, clientY, currentTarget } = e;
      const { clientWidth, clientHeight, offsetLeft, offsetTop } = currentTarget;
    
      const horizontal = (clientX - offsetLeft) / clientWidth;
      const vertical = (clientY - offsetTop) / clientHeight;
      const rotateX = (THRESHOLD / 2 - horizontal * THRESHOLD).toFixed(2);
      const rotateY = (vertical * THRESHOLD - THRESHOLD / 2).toFixed(2);
    
      card.style.transform = `perspective(${clientWidth}px) rotateX(${rotateY}deg) rotateY(${rotateX}deg) scale3d(1, 1, 1)`;
    }
    
    function resetStyles(e) {
      card.style.transform = `perspective(${e.currentTarget.clientWidth}px) rotateX(0deg) rotateY(0deg)`;
    }
    
    if (!motionMatchMedia.matches) {
      card.addEventListener("mousemove", handleHover);
      card.addEventListener("mouseleave", resetStyles);
    }
    
    </script> -->
</html>